#include <iostream>
#include "display.h"

void fancy_lighting(int n){   // n==1일때 title n=2일때 all clear n=3일때 fail

  clear();
  int col=0;
  if(n==1){col=82; bkgd(COLOR_PAIR(6));}
  else if(n==2){col=128; bkgd(COLOR_PAIR(7));}
  else if(n==3){col=37; bkgd(COLOR_PAIR(9));}

  int fancy[3][6][128]={
    {{1,1,1,1,1,1,1,2,1,1,1,2,0,0,0,1,1,2,0,1,1,1,1,1,2,0,1,1,2,0,0,1,1,2,1,1,1,1,1,1,1,2,0,0,0,0,0,1,1,1,1,1,1,2,0,0,1,1,1,1,1,2,0,1,1,1,2,0,0,0,1,1,1,2,1,1,1,1,1,1,1,2},
      {1,1,3,5,5,5,5,6,1,1,1,1,2,0,0,1,1,4,1,1,3,5,5,1,1,2,1,1,4,0,1,1,3,6,1,1,3,5,5,5,5,6,0,0,0,0,1,1,3,5,5,5,5,6,0,1,1,3,5,5,1,1,2,1,1,1,1,2,0,1,1,1,1,4,1,1,3,5,5,5,5,6},
      {1,1,1,1,1,1,1,2,1,1,3,1,1,2,0,1,1,4,1,1,1,1,1,1,1,4,1,1,1,1,1,3,6,0,1,1,1,1,1,2,0,0,0,0,0,0,1,1,4,0,0,1,1,1,2,1,1,1,1,1,1,1,4,1,1,3,1,1,1,1,3,1,1,4,1,1,1,1,1,2,0,0},
      {7,5,5,5,5,1,1,4,1,1,4,7,1,1,2,1,1,4,1,1,3,5,5,1,1,4,1,1,3,5,1,1,2,0,1,1,3,5,5,6,0,0,0,0,0,0,1,1,4,0,0,0,1,1,4,1,1,3,5,5,1,1,4,1,1,4,7,1,1,3,6,1,1,4,1,1,3,5,5,6,0,0},
      {1,1,1,1,1,1,1,4,1,1,4,0,7,1,1,1,1,4,1,1,4,0,0,1,1,4,1,1,4,0,0,1,1,2,1,1,1,1,1,1,1,2,0,0,0,0,7,1,1,1,1,1,1,3,6,1,1,4,0,0,1,1,4,1,1,4,0,7,5,6,0,1,1,4,1,1,1,1,1,1,1,2},
      {7,5,5,5,5,5,5,6,7,5,6,0,0,7,5,5,5,6,7,5,6,0,0,7,5,6,7,5,6,0,0,7,5,6,7,5,5,5,5,5,5,6,0,0,0,0,0,7,5,5,5,5,5,6,0,7,5,6,0,0,7,5,6,7,5,6,0,0,0,0,0,7,5,6,7,5,5,5,5,5,5,6}},

    {{ 0,1,1,1,1,1,2,0,1,1,2,0,0,0,0,0,1,1,2,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,2,0,0,1,1,1,1,1,1,2,0,1,1,1,1,1,1,1,2,0,0,0,0,0,1,1,1,1,1,1,2,1,1,2,0,0,0,0,0,1,1,1,1,1,1,1,2,0,1,1,1,1,1,2,0,1,1,1,1,1,1,2,0,0,0,0,0,1,1,2,0,0,0,0,1,1,2},
   {1,1,3,5,5,1,1,2,1,1,4,0,0,0,0,0,1,1,4,0,0,0,0,0,0,0,0,0,1,1,3,5,5,5,5,6,7,5,5,1,1,3,5,5,6,1,1,3,5,5,1,1,2,1,1,3,5,5,5,5,6,0,1,1,3,5,5,5,5,6,0,0,0,0,1,1,3,5,5,5,5,6,1,1,4,0,0,0,0,0,1,1,3,5,5,5,5,6,1,1,3,5,5,1,1,2,1,1,3,5,5,1,1,2,0,0,0,0,1,1,4,0,0,0,0,1,1,4},
   {1,1,1,1,1,1,1,4,1,1,4,0,0,0,0,0,1,1,4,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,0,0,0,1,1,4,0,0,0,1,1,1,1,1,1,1,4,1,1,4,0,0,1,1,1,2,1,1,1,1,1,2,0,0,0,0,0,0,1,1,4,0,0,0,0,0,1,1,4,0,0,0,0,0,1,1,1,1,1,2,0,0,1,1,1,1,1,1,1,4,1,1,1,1,1,1,3,6,0,0,0,0,1,1,4,0,0,0,0,1,1,4},
   {1,1,3,5,5,1,1,4,1,1,4,0,0,0,0,0,1,1,4,0,0,0,0,0,0,0,0,0,7,5,5,5,5,1,1,4,0,0,0,1,1,4,0,0,0,1,1,3,5,5,1,1,4,1,1,4,0,0,0,1,1,4,1,1,3,5,5,6,0,0,0,0,0,0,1,1,4,0,0,0,0,0,1,1,4,0,0,0,0,0,1,1,3,5,5,6,0,0,1,1,3,5,5,1,1,4,1,1,3,5,5,1,1,2,0,0,0,0,7,5,6,0,0,0,0,7,5,6},
   {1,1,4,0,0,1,1,4,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,0,0,0,0,1,1,1,1,1,1,1,4,0,0,0,1,1,4,0,0,0,1,1,4,0,0,1,1,4,7,1,1,1,1,1,1,3,6,1,1,1,1,1,1,1,2,0,0,0,0,7,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,4,0,0,1,1,4,1,1,4,0,0,1,1,4,0,0,0,0,1,1,2,0,0,0,0,1,1,2},
   {7,5,6,0,0,7,5,6,7,5,5,5,5,5,5,6,7,5,5,5,5,5,5,6,0,0,0,0,7,5,5,5,5,5,5,6,0,0,0,7,5,6,0,0,0,7,5,6,0,0,7,5,6,0,7,5,5,5,5,5,6,0,7,5,5,5,5,5,5,6,0,0,0,0,0,7,5,5,5,5,5,6,7,5,5,5,5,5,5,6,7,5,5,5,5,5,5,6,7,5,6,0,0,7,5,6,7,5,6,0,0,7,5,6,0,0,0,0,7,5,6,0,0,0,0,7,5,6}},

   {{1,1,1,1,1,1,1,2,0,1,1,1,1,1,2,0,0,1,1,2,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0},
     {1,1,3,5,5,5,5,6,1,1,3,5,5,1,1,2,0,1,1,4,0,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0},
     {1,1,1,1,1,2,0,0,1,1,1,1,1,1,1,4,0,1,1,4,0,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0},
     {1,1,3,5,5,6,0,0,1,1,3,5,5,1,1,4,0,1,1,4,0,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0},
     {1,1,4,0,0,0,0,0,1,1,4,0,0,1,1,4,0,1,1,4,0,1,1,1,1,1,1,1,2,0,1,1,2,0,1,1,2},
     {7,5,6,0,0,0,0,0,7,5,6,0,0,7,5,6,0,7,5,6,0,7,5,5,5,5,5,5,6,0,7,5,6,0,7,5,6}},
   };

  for(int j=0; j<col;j++){
    for(int i=0; i<6; i++){
      int r=i+5;
      int c=j+10;
      switch (fancy[n-1][i][j]) {
        case 0:
          mvprintw(r,c," ");
          break;
        case 1:
          mvprintw(r,c,"\u2B1B");
          break;
        case 2:
        mvprintw(r,c,"\u2557");
          break;
        case 3:
          mvprintw(r,c,"\u2554");
          break;
        case 4:
          mvprintw(r,c,"\u2551");
          break;
        case 5:
          mvprintw(r,c,"\u2550");
          break;
        case 6:
          mvprintw(r,c,"\u255D");
          break;
        case 7:
          mvprintw(r,c,"\u255A");
          break;
      }
      refresh();
      usleep(3000);
    }
  }
  if(n==1)
    mvprintw(12,35,"Press any key to start.");
  else if(n==2)
    mvprintw(12,65,"Press any key to exit.");
  else if(n==3)
    mvprintw(12,15,"Press any key to exit.");
  nodelay(stdscr, FALSE);
  getch();
}

void nextStageEffect(int num){
  clear();
  bkgd(COLOR_PAIR(6));
  mvprintw(5,10,"Stage < %d >",num);
  for(int i=5; i>0;i--){
    mvprintw(6,10,"Start in %d seconds",i);
    refresh();
    sleep(1);
  }
}

void State_board(){   // 스코어 보드 프린트함수
  wborder(state_board,'|','|','-','-','+','+','+','+');

  mvwprintw(state_board , 1, 1, "State board");
  mvwprintw(state_board , 2, 1, "current length / max length : %d / %d",snSize,20);
  mvwprintw(state_board , 3, 1, "growthItems : %d",growItems);
  mvwprintw(state_board , 4, 1, "poisonItems : %d",poisonItems);
  mvwprintw(state_board , 5, 1, "gates : %d",gates);
  mvwprintw(state_board , 6, 1, "time : %04d",runtime);

  //wborder(state_board,"\u2500","\u2500","\u2502","\u2502","\u250C","\u2510","\u2514","\u2518");
  wrefresh(state_board);
}

void Mission_board(mission m, mission_result p){   // 미션보드
  wborder(mission_board,'|','|','-','-','+','+','+','+');

  mvwprintw(mission_board , 1, 1, "Mission_board");
  mvwprintw(mission_board, 2, 1, "mission 1 : size >= %d (%d)",m.getLeng(),p.leng);
  mvwprintw(mission_board, 3, 1, "mission 2 : growthItem >= %d (%d)",m.getgItem(),p.gitem);
  if(m.getLock()) mvwprintw(mission_board, 4, 1, "mission 3 : poisonItem <= %d (%d)",m.getpItem(),p.pitem);
  else mvwprintw(mission_board, 4, 1, "mission 3 : poisonItem >= %d (%d)",m.getpItem(),p.pitem);
  mvwprintw(mission_board, 5, 1, "mission 4 : gate >= %d (%d)",m.getGate(),p.gate);
  mvwprintw(mission_board, 6, 1, "mission 5 : time >= %d (%d)",m.getTime(),p.runtime);

  wrefresh(mission_board);
}
